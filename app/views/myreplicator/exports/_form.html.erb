<% 
#rather than yaml arrays of the drop downs
export_to = ["destination_db","backup","vertica"]
export_type = ["incremental","fulldump"]
%>
<%= form_for(@export) do |f| %>
  <% if @export.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@export.errors.count, "error") %> prohibited this export from being saved:</h2>

      <ul>
      <% @export.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="form-section">
<label>Export to</label>
<select name="export[export_to]" id="export_to" class="chosen" data-placeholder="Select export destination">
  <% export_to.each do |val| %>
  <option value="<%= val %>" <% if @export.export_to == val %>SELECTED<% end %>><%= val %></option>
  <% end %> 
</select>
<label>Export type</label>
<select name="export[export_type]" id="export_type" class="chosen" data-placeholder="Select your export type">
  <% export_type.each do |val| %>
  <option value="<%= val %>" <% if @export.export_type == val %>SELECTED<% end %>><%= val %></option>
  <% end %>
</select>    
<label>Source Schema</label>
<%= f.select :source_schema, @dbs %>
<label>Destination Schema</label>
<%= f.select :destination_schema, @dbs %>
<label>Table Name</label>
<%= f.select :table_name, [] %>
<label>Incremental Column</label>
<%= f.text_field :incremental_column %>
<label>Incremental Column Type</label>
<%= f.text_field :incremental_column_type %>
<label>Maximum Incremental Value</label>
<%= f.text_field :max_incremental_value %>
<label>Store a copy in</label>
<%= f.text_field :s3_path %>
<label>Active</label>
<select name="export[active]" id="active" class="chosen">
  <option value="true" <% if @export.active == true %>SELECTED<% end %>>true</option>
  <option value="false" <% if @export.active == false %>SELECTED<% end %>>false</option>
</select>
</div>
<div class="form-section right">
<%= f.hidden_field :cron %>
<label>Cron</label>
<div class="cron-option">
  <span class="cron-label">minutes:</span>
  <div class="cron-select">
    <select id="min" class="cron" multiple data-placeholder="Minutes">
      <option value="*">*</option>
    <% (0..59).each do |n| %>
      <option value="<%=n %>"><%= n%></option>
    <% end %>
    </select>
  </div>
  <label class="n"><input type="checkbox" data-slider="cron-min" data-chosen="min" id="cron-slider-trigger-min"/>every <em id="cron-n-min">n:</em></label>
  <div class="cron-slider">
    <div id="cron-min"></div>
  </div>
</div>
<div class="cron-option">
  <span class="cron-label">hours:</span>
  <div class="cron-select">
    <select id="hour" class="cron" multiple data-placeholder="Hours">
      <option value="*">*</option>
    <% (0..23).each do |n| %>
      <option value="<%=n %>"><%= n%></option>
    <% end %>
    </select>
  </div>
  <label class="n"><input type="checkbox" data-slider="cron-hr" data-chosen="hour" id="cron-slider-trigger-hr"/>every <em id="cron-n-hr">n:</em></label>
  <div class="cron-slider">
    <div id="cron-hr"></div>
  </div>
</div>
<div class="cron-option">
  <span class="cron-label">days:</span>
  <div class="cron-select">
    <select id="day" class="cron" multiple data-placeholder="Days">
      <option value="*">*</option>
    <% (1..31).each do |n| %>
      <option value="<%=n %>"><%= n%></option>
    <% end %>
    </select>
  </div>
</div>
<div class="cron-option">
  <span class="cron-label">months:</span>
  <div class="cron-select">
    <select id="month" class="cron" multiple data-placeholder="Months">
      <option value="*">*</option>
    <% (1..12).each do |n| %>
      <option value="<%= n - 1%>"><%= Date::MONTHNAMES[n]%></option>
    <% end %>
    </select>
  </div>
</div>    
<div class="cron-option">
  <span class="cron-label">weekday:</span>
  <div class="cron-select">
    <select id="dow" class="cron" multiple data-placeholder="Day of the Week">
      <option value="*">*</option>
    <% (0..6).each do |n| %>
      <option value="<%=n %>"><%= Date::DAYNAMES[n]%></option>
    <% end %>
    </select>
  </div>
</div>
<label style="clear:left">Cron synatx</label>
<div id="cron-val"></div>
<label>Cron translation</label>
<div id="cronwtf"></div>
</div>
  <div class="actions">
    <%= f.submit %>
    <%= link_to content_tag(:span, 'cancel'), exports_path, :class => "btn left action cancel" %>
  </div>
<% end %>

<script>
var dbs = {
<% @tables.each do |key,values| %>
  "<%= key %>":[
    <% values.each do |table| %>
      "<%= table %>",
    <% end %>
  ],
<% end %>
}
$(function(){
  CronUI.translate();
  $(".chosen").select2();
  var $destination = $("#export_destination_schema").clone();
  var $table_name = $("#export_table_name").clone()
  $("#export_destination_schema").select2();
  $("#export_table_name").select2();
  $(".cron").chosen().change(function(){CronUI.translate()});
  $("#export_source_schema").select2().change(function(){
    exportSchemaSelect($(this).val())
  });
  exportSchemaSelect($("#export_source_schema").val());

  $("#export_to").change(function(){
    var exp = $(this).val();
    if(exp == 'vertica'){
      $("#export_destination_schema").select2("destroy").before('<input type="text" id="export_destination_schema" name="export[destination_schema]"/>').remove();
    }else{
      if($("#s2id_export_destination_schema").length < 1){
        $("#export_destination_schema").before($destination).remove();
        $("#export_destination_schema").select2();
      }
    }
  })
  $("#cron-min").slider({
    min: 1, 
    max: 59,
    range: "min",
    slide: function(event,ui){
      $("#cron-n-min").text(ui.value+":")
      CronUI.translate();
    }
  });
  $("#cron-hr").slider({
    min: 1, 
    max: 23,
    range: "min",
    slide: function(event,ui){
      $("#cron-n-hr").text(ui.value+":")
      CronUI.translate();
    }
  });  
  $("label.n").find("input").click(function(e){
    var box = $(this)
    var val = $("#"+box.data("slider")).slider("value");
    if(box.attr("checked") == "checked"){
      box.parent("label").prev("div").addClass("trans").addClass("hide").end().next("div").addClass("show").end().find("em").text(val+":");
      $("#"+box.data("chosen")).val("").trigger("liszt:updated");
    }else{
      box.parent("label").prev("div").removeClass("hide").end().next("div").removeClass("show").end().find('em').text("n:");
      var d = box.parent("label").prev("div")
      window.setTimeout(function(){d.removeClass('trans')},500)
    }
    CronUI.translate();
  })

<%- if @edit -%>
  editInit();
<%- end -%>
})

function editInit(){
  var cron = "<%= @export.cron %>";
  var displays = ["#min","#hour","#day","#month","#dow"]; 
  var cron_vals = cron.split(" ");
  for(i=0;i<cron_vals.length; i++){
    //console.log(displays[i]+" val: "+cron_vals[i])
    //console.log(cron_vals[i].indexOf(","))
    if(i < 2){
      if(cron_vals[i].toString().charAt(1) == '/'){
        if(displays[i] == "#min"){
          var val = cron_vals[i].toString().split('/')[1];
          $("#cron-slider-trigger-min").attr("checked","checked").parent("label").prev("div").addClass("trans").addClass("hide").end().next("div").addClass("show").end().find("em").text(val+":");
          $("#cron-min").slider("value",val)
        }else{
          var val = cron_vals[i].toString().split('/')[1];
          $("#cron-slider-trigger-hr").attr("checked","checked").parent("label").prev("div").addClass("trans").addClass("hide").end().next("div").addClass("show").end().find("em").text(val+":");
          $("#cron-hr").slider("value",val)
        }
      }else{
        if(cron_vals[i].indexOf(",") != -1){
          var vals = cron_vals[i].split(',')
          $(displays[i]).val(vals).trigger("liszt:updated");
        }else{
          $(displays[i]).val(cron_vals[i]).trigger("liszt:updated");
        }
      }
    }else{
        if(cron_vals[i].indexOf(",") != -1){
          var vals = cron_vals[i].split(',')
          $(displays[i]).val(vals).trigger("liszt:updated");
        }else{
          $(displays[i]).val(cron_vals[i]).trigger("liszt:updated");
        }
    }
  }
  CronUI.translate();
  <% if @export.export_to != 'vertica' %>
  $("#export_table_name").select2("val","<%= @export.table_name %>")
  <% else %>
    $("#export_destination_schema").select2("destroy").before('<input type="text" id="export_destination_schema" name="export[destination_schema]" value="<%= @export.destination_schema %>"/>').remove();
  <% end %>
}

function exportSchemaSelect(val){
    var target = $("#export_table_name");
    if(target.hasClass("select2-offscreen")){
      target.select2("destroy")
      var tables = dbs[val];
      var l = tables.length;
      var options = "";
      for(i=0;i<l;i++){
        options += "<option value='"+tables[i]+"'>"+tables[i]+"</option>";
      }
      target.val('').find("option").remove()
      target.append(options).select2();
    }
}
</script>
